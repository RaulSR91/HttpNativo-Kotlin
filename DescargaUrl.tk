import android.os.AsyncTask
import com.ruloRomerr.despensa.Interfaces.CompletadoListener
import java.io.IOException
import java.io.InputStream
import java.lang.Exception
import java.net.HttpURLConnection
import java.net.URL

class DescargaUrl(private var completadoListener: CompletadoListener):AsyncTask<String,Void,String>() {


    override fun doInBackground(vararg params: String): String? {
        try {
            return descargarDatos(params[0])
        }
        catch (e:IOException){
            e.printStackTrace()
            return null
        }

        return null
    }


    override fun onPostExecute(result: String) {
        try {
            completadoListener.descargaCompleta(result)
        }
        catch (e:Exception){
            e.printStackTrace()
        }
    }

    @Throws(IOException::class)
    private fun descargarDatos(urlServicio:String):String {

        //val policy = StrictMode.ThreadPolicy.Builder().permitAll().build()
        //StrictMode.setThreadPolicy(policy)

        var inputstream: InputStream? = null

        try {
            val url = URL(urlServicio)
            val conn = url.openConnection() as HttpURLConnection
            conn.requestMethod = "GET"
            conn.connect()
            inputstream = conn.inputStream
            return inputstream.bufferedReader().use {
                it.readText()
            }

        }finally {
            if(inputstream != null){
                inputstream.close()
            }
        }
    }


}
